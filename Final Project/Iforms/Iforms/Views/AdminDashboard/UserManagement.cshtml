@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Mvc.Localization
<h2>Manage Users</h2>
<div class="navbar navbar-expand-lg navbar-light bg-secondary-subtle">
    <button data-action="Block" class="btn btn-outline-primary me-2"><i class="bi bi-lock-fill"></i> Block</button>
    <button data-action="Unblock" class="btn btn-outline-primary me-2"><i class="bi bi-unlock-fill"></i> Unblock</button>
    <button data-action="Activate" class="btn btn-outline-success me-2"><i class="bi bi-person-check-fill"></i> Activate</button>
    <button data-action="Inactivate" class="btn btn-outline-warning me-2"><i class="bi bi-person-x-fill"></i> Inactivate</button>
    <button data-action="AddAdminAccess" class="btn btn-outline-info me-2"><i class="bi bi-person-badge-fill"></i> Give Admin Access</button>
    <button data-action="RemoveAdminAccess" class="btn btn-outline-secondary me-2"><i class="bi bi-person-dash-fill"></i> Remove Admin Access</button>
    <button data-action="Delete" class="btn btn-outline-danger"><i class="bi bi-trash-fill"></i> <span data-i18n="delete">Delete</span></button>
</div>

<table class="table table-bordered">  
   <thead>  
       <tr>  
           <th><input type="checkbox" id="selectAll" title="Select/Deselect all"></th>  
           <th>Name</th>  
           <th>Role</th>
           <th>Registered at</th>  
           <th><span data-i18n="status">Status</span></th>  
       </tr>  
   </thead>  
   <tbody>  
       @foreach (var user in Model)  
       {  
           <tr class="user-row" data-user-id="@user.Id" style="cursor:pointer;">  
               <td><input type="checkbox" class="select-user" value="@user.Id"></td>  
               <td>  
                   <div>@user.UserName</div>  
                   <div class="text-muted small">@user.UserEmail</div>    
               </td>
               <td>@user.UserRole</td>
               <td>@user.CreatedAt.ToString("g")</td>  
               <td>@user.UserStatus</td>  
           </tr>  
       }  
   </tbody>  
</table>  

@section Scripts {  
   <script src="~/lib/jquery/dist/jquery.min.js"></script>  
   <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>  
   <script>  
       document.addEventListener('DOMContentLoaded', () => {  
           const selectAll = document.getElementById('selectAll');  
           const userCheckboxes = document.querySelectorAll('.select-user');  

           selectAll.addEventListener('change', () => {  
               userCheckboxes.forEach(cb => cb.checked = selectAll.checked);  
           });  

           // Make user rows clickable except when clicking on a checkbox
           document.querySelectorAll('.user-row').forEach(row => {
               row.addEventListener('click', function(e) {
                   if (e.target.tagName.toLowerCase() === 'input') return;
                   const userId = this.getAttribute('data-user-id');
                   if (userId) {
                       window.location.href = `/User/Edit/${userId}`;
                   }
               });
           });

           document.querySelectorAll('[data-action]').forEach(btn => {  
               btn.addEventListener('click', async () => {  
                   const action = btn.dataset.action;  
                   const userIds = [...document.querySelectorAll('.select-user:checked')]  
                       .map(el => parseInt(el.value));  

                   if (!userIds.length) {  
                       toastr.error('Please select at least one user.');  
                       return;  
                   }  

                   if (action === 'Delete' && !confirm(`Confirm ${action} selected users?`)) {  
                       return;  
                   }  

                   let endpointAction = action;
                   if (action === 'AddAdminAccess') endpointAction = 'AddAdminAccess';
                   if (action === 'RemoveAdminAccess') endpointAction = 'RemoveAdminAccess';

                   try {  
                       const response = await fetch(`/AdminDashboard/UserManagement/${endpointAction}`, {  
                           method: 'POST',  
                           headers: { 'Content-Type': 'application/json' },  
                           body: JSON.stringify(userIds)  
                       });  

                       const result = await response.json();  
                       if (result.success) {  
                           toastr.success(result.message);  
                           setTimeout(() => location.reload(), 1000);  
                       } else {  
                           toastr.error(result.message);  
                       }  
                   } catch {  
                       toastr.error('Action failed. Please try again.');  
                   }  
               });  
           });  
       });  
   </script>  
}
