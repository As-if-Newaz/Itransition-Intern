@model IEnumerable<Iforms.BLL.DTOs.ApiTokenDTO>
@{
    ViewBag.Title = "API Tokens";
}
<h2>API Tokens</h2>
<div class="navbar navbar-expand-lg navbar-light bg-secondary-subtle mb-3">
    <button id="revokeSelected" class="btn btn-outline-danger"><i class="bi bi-x-circle-fill"></i> Revoke</button>
</div>
<form id="tokenListForm">
<table class="table table-bordered">
    <thead>
        <tr>
            <th><input type="checkbox" id="selectAll" title="Select/Deselect all"></th>
            <th>Name</th>
            <th>Token</th>
            <th>Status</th>
            <th>Created At</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var token in Model)
        {
            <tr class="token-row" data-token-id="@token.Id" style="cursor:pointer;">
                <td><input type="checkbox" class="select-token" value="@token.Id"></td>
                <td>@token.Name</td>
                <td>
                    <span style="font-family:monospace;">@token.Key</span>
                </td>
                <td>
                    @if (token.IsRevoked)
                    {
                        <span>Revoked</span>
                    }
                    else
                    {
                        <span>Active</span>
                    }
                </td>
                <td>@token.CreatedAt.ToString("g")</td>
            </tr>
        }
    </tbody>
</table>
</form>
@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const selectAll = document.getElementById('selectAll');
            const tokenCheckboxes = document.querySelectorAll('.select-token');

            selectAll.addEventListener('change', () => {
                tokenCheckboxes.forEach(cb => cb.checked = selectAll.checked);
            });

            document.getElementById('revokeSelected').addEventListener('click', async () => {
                const tokenIds = [...document.querySelectorAll('.select-token:checked')]
                    .map(el => parseInt(el.value));
                if (!tokenIds.length) {
                    toastr.error('Please select at least one token.');
                    return;
                }
                if (!confirm('Are you sure you want to revoke the selected tokens?')) {
                    return;
                }
                try {
                    const response = await fetch('/ApiToken/RevokeBatch', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(tokenIds)
                    });
                    const result = await response.json();
                    if (result.success) {
                        toastr.success(result.message);
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        toastr.error(result.message);
                    }
                } catch {
                    toastr.error('Action failed. Please try again.');
                }
            });
        });
    </script>
} 