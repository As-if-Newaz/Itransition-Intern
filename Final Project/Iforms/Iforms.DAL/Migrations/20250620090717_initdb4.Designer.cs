// <auto-generated />
using System;
using Iforms.DAL.Entity_Framework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Iforms.DAL.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250620090717_initdb4")]
    partial class initdb4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUrl")
                        .HasColumnType("VARCHAR");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<bool?>("SignleChoice")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Details")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("PerformedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PerformedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformedById");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("TemplateId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FilledAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilledById")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilledById");

                    b.HasIndex("TemplateId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("QuestionDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("QuestionOrder")
                        .HasColumnType("int");

                    b.Property<string>("QuestionTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("TopicId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.TemplateAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.HasIndex("UserId");

                    b.ToTable("TemplateAccesses");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.TemplateTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplateTags");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreferredLanguage")
                        .HasColumnType("int");

                    b.Property<int>("PreferredTheme")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("UserEmail")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Answer", b =>
                {
                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.Form", "Form")
                        .WithMany("Answers")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.AuditLog", b =>
                {
                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.User", "PerformedBy")
                        .WithMany()
                        .HasForeignKey("PerformedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerformedBy");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Comment", b =>
                {
                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.User", "CreatedBy")
                        .WithMany("Comments")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.Template", "Template")
                        .WithMany("Comments")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Form", b =>
                {
                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.User", "FilledBy")
                        .WithMany("FilledForms")
                        .HasForeignKey("FilledById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.Template", "Template")
                        .WithMany("Forms")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilledBy");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Like", b =>
                {
                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.Template", "Template")
                        .WithMany("Likes")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Template");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Question", b =>
                {
                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.Template", "Template")
                        .WithMany("Questions")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Template", b =>
                {
                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.User", "CreatedBy")
                        .WithMany("CreatedTemplates")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.TemplateAccess", b =>
                {
                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.Template", "Template")
                        .WithMany("TemplateAccesses")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.User", "User")
                        .WithMany("AccessibleTemplates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Template");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.TemplateTag", b =>
                {
                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.Tag", "Tag")
                        .WithMany("TemplateTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iforms.DAL.Entity_Framework.Table_Models.Template", "Template")
                        .WithMany("TemplateTags")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Form", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Tag", b =>
                {
                    b.Navigation("TemplateTags");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.Template", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Forms");

                    b.Navigation("Likes");

                    b.Navigation("Questions");

                    b.Navigation("TemplateAccesses");

                    b.Navigation("TemplateTags");
                });

            modelBuilder.Entity("Iforms.DAL.Entity_Framework.Table_Models.User", b =>
                {
                    b.Navigation("AccessibleTemplates");

                    b.Navigation("Comments");

                    b.Navigation("CreatedTemplates");

                    b.Navigation("FilledForms");

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
